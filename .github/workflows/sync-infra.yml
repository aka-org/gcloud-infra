name: Sync Infra 
on:
  pull_request:
    types: [closed]
    branches:
      - main
  push:
    branches:
      - 'releases/**'
      - 'feature/**'
    paths:
      - 'terraform/**'

jobs:
  filter_envs:
    if: >
      github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'releases/rollout')
      || startswith(github.ref, 'refs/heads/releases')
      || startswith(github.ref, 'refs/heads/feature')
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Filter envs with changes
        id: filter_envs
        uses: dorny/paths-filter@v3.0.2
        with:
          filters: |
            testing:
              - 'terraform/**/testing/**'
            prod:
              - 'terraform/**/prod/**'

      - name: Build matrix based on changed envs
        id: set-matrix
        run: |
          MATRIX=()
          if [[ "${{ steps.filter_envs.outputs.testing }}" == "true" ]]; then
            MATRIX+=('{"env":"testing","project":"gcloud-infra-testing-aab1735b"}')
          fi
          if [[ "${{ steps.filter_envs.outputs.prod }}" == "true" ]]; then
            MATRIX+=('{"env":"prod","project":"prod-project"}')
          fi
          # Join the array safely
          JSON_MATRIX=$(jq -n --argjson m "$(printf '%s\n' "${MATRIX[@]}" | jq -s .)" '$m')

          # Set the output properly
          echo "matrix=$JSON_MATRIX" >> "$GITHUB_OUTPUT"

  update_tf_state:
    needs: filter_envs
    if: needs.filter_envs.outputs.matrix != '[]' 
    uses: ./.github/workflows/update-terraform-state.yml
    strategy:
      matrix: ${{ fromJson(needs.filter_envs.outputs.matrix) }}
    with:
      project: ${{ matrix.project }}
      environment: ${{ matrix.env }}
      terraform-version: 1.11.4
      github-runner: ubuntu-22.04
    secrets:
      GOOGLE_CREDENTIALS_B64: ${{ secrets.GOOGLE_CREDENTIALS_B64 }}
      BILLING_ACCOUNT_ID: ${{ secrets.BILLING_ACCOUNT_ID }}
