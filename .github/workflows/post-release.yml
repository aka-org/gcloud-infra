name: Post Release 
on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  filter_envs:
    if: > 
      github.event.pull_request.merged == true
      && startsWith(github.event.pull_request.head.ref, 'releases/rollout')
    runs-on: ubuntu-22.04
    outputs:
      testing: ${{ steps.filter.outputs.testing }}
      prod: ${{ steps.filter.outputs.prod }}
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Filter envs with changes
        id: filter
        uses: dorny/paths-filter@v3.0.2
        with:
          filters: |
            testing:
              - 'releases/release-manifest.testing.json'
            prod:
              - 'releases/release-manifest.prod.json'

  post_release:
    needs: filter_envs
    runs-on: ubuntu-22.04
    env:
      CICD_TOKEN: ${{ secrets.CICD_TOKEN }}
      ACTION: POST 

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.2.2

      - name: Set ENVIRONMET and RELEASE_MANIFEST environment variables
        run: |
          if [[ "${{ needs.filter_envs.outputs.testing }}" == "true" ]]; then
            echo "ENVIRONMENT=testing" >> $GITHUB_ENV
            echo "RELEASE_MANIFEST=release/release-manifest.testing.json" >> $GITHUB_ENV
          elif [[ "${{ needs.filter_envs.outputs.prod }}" == "true" ]]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "RELEASE_MANIFEST=release/release-manifest.prod.json" >> $GITHUB_ENV
          fi

      - name: Set RELEASE environment variable
        run: echo "RELEASE=$(jq -r '.version' $RELEASE_MANIFEST)" >> $GITHUB_ENV

      - name: Add and push post release tag 
        run: scripts/release_manager.sh
          
      - name: Create Release
        uses: softprops/action-gh-release@v2.2.2
        with:
          token: ${{ secrets.CICD_TOKEN }}
          tag_name: v${{ env.RELEASE }}
          name: "v${{ env.RELEASE }}"
